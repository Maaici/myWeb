import{_ as p,o,c as n,a as t,t as a,g as m,e as g,F as A,r as v,f,p as h,b as u}from"./index-BOJdmiFA.js";const y={props:{article:{id:1,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]}},mounted(){},methods:{goPage(e){this.$router.push("/article/"+e)}}},V={class:"title-text"},w={class:"line-content"},T={class:"article-info"},x={class:"time-text"},$={class:"property-icon"},b={class:"view-text"};function I(e,r,i,_,c,s){return o(),n("div",{class:"lnode-content",onClick:r[0]||(r[0]=d=>s.goPage(i.article.id))},[t("div",V,a(i.article.title),1),t("div",w,a(i.article.content),1),t("div",T,[t("div",x,[t("span",$,a(i.article.property),1),m(" 发布于 "+a(i.article.inTime),1)]),t("div",b,a(i.article.totalView)+" 阅读",1)])])}const k=p(y,[["render",I],["__scopeId","data-v-55f04130"]]),S={data(){return{articles:[{id:1,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:2,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:1,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:2,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:1,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:2,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:1,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:2,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:1,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]},{id:2,title:"包你懂设计模式之：适配器模式（Adapter）",inTime:"2023-11-25 12:25:36",content:"适配器模式是这个专栏的第一个结构型设计模式，之前六篇介绍了创建型设计模式，欢迎大家查看和交流。适配器模式：将一个类的接口转换成客户希望的另外一个接口，Adapter模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。适配器这个模式在我们生活中可以找到很多原型，比如下图中的港版插头需要接在内地的插座上",totalView:7525,property:"原创",tags:["设计模式","架构设计"]}]}},components:{"article-item":k}},B=e=>(h("data-v-c5eeb1cd"),e=e(),u(),e),N={class:"main-content"},C={class:"left-content"},F={class:"article-content bg-color"},P=B(()=>t("div",{class:"right-content"},[t("div",{class:"type-content bg-color"}," faadfsadfsad ")],-1));function D(e,r,i,_,c,s){const d=g("article-item");return o(),n("div",N,[t("div",C,[t("div",F,[(o(!0),n(A,null,v(c.articles,l=>(o(),n("div",{class:"article-item",key:l.id},[f(d,{article:l},null,8,["article"])]))),128))])]),P])}const L=p(S,[["render",D],["__scopeId","data-v-c5eeb1cd"]]);export{L as default};
